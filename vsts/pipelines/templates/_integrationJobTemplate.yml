parameters:
  - name: nodeVersions
    type: object
    default:
      - 14
      - 14-3
      - 14-4
      - 14-5
      - 14-6
      - 14-8
      - 14-9
      - 14-10
      - 14-11
      - 16
  - name: dotNetCoreVersions
    type: object
    default:
      - 30
      - 31
      - 50
      - 60
      - dynamic
      - runtime
  - name: phpVersions
    type: object
    default:
      - 74
      - 80
      - 81
  - name: golangVersions
    type: object
    default:
      - full
jobs:
- job: Job_PythonIntegrationTests
  displayName: Run Python Integration Tests
  dependsOn:
    - Job_BuildImage_Latest
    - Job_BuildImage_LtsVersions
    - Job_BuildImage_Jamstack
    - Job_BuildImage_GithubActions
    - Job_BuildImage_VsoFocal
    - Job_BuildImage_Full
    - Job_BuildImage_Cli
    - Job_BuildImage_Buildpack
    - Job_RuntimeImages
  pool:
    name: AzurePipelines-EO
    demands:
      - ImageOverride -equals AzurePipelinesUbuntu20.04compliant
  timeoutInMinutes: 300
  variables:
    skipComponentGovernanceDetection: true
  steps:
  - script: |
      echo "##vso[task.setvariable variable=BuildBuildImages;]false"
      echo "##vso[task.setvariable variable=BuildRuntimeImages;]false"
      echo "##vso[task.setvariable variable=TestBuildImages;]false"
      echo "##vso[task.setvariable variable=TestRuntimeImages;]false"
      echo "##vso[task.setvariable variable=TestIntegrationCaseFilter;]category=python"
      echo "##vso[task.setvariable variable=TestIntegration;]true"
      echo "##vso[task.setvariable variable=PushBuildImages;]false"
      echo "##vso[task.setvariable variable=PushRuntimeImages;]false"
      echo "##vso[task.setvariable variable=EmbedBuildContextInImages;]false"
    displayName: 'Set variables'
  - template: _setReleaseTag.yml
  - template: _buildTemplate.yml

# DotNetCore integration tests
- ${{ each dotNetCoreVersion in parameters.dotNetCoreVersions }}:
  - job:
    displayName: 'Run DotNetCore ${{ dotNetCoreVersion }} Integration Tests'
    dependsOn:
    - Job_BuildImage_Latest
    - Job_BuildImage_LtsVersions
    - Job_BuildImage_Jamstack
    - Job_BuildImage_GithubActions
    - Job_BuildImage_VsoFocal
    - Job_BuildImage_Full
    - Job_BuildImage_Cli
    - Job_BuildImage_Buildpack
    - Job_RuntimeImages
    pool:
      name: AzurePipelines-EO
      demands:
        - ImageOverride -equals AzurePipelinesUbuntu20.04compliant
    variables:
      skipComponentGovernanceDetection: true
    timeoutInMinutes: 300
    steps:
        - script: |
            echo "##vso[task.setvariable variable=BuildBuildImages;]false"
            echo "##vso[task.setvariable variable=BuildRuntimeImages;]false"
            echo "##vso[task.setvariable variable=TestBuildImages;]false"
            echo "##vso[task.setvariable variable=TestRuntimeImages;]false"
            echo "##vso[task.setvariable variable=TestIntegrationCaseFilter;]category=dotnetcore-${{ dotNetCoreVersion }}"
            echo "##vso[task.setvariable variable=TestIntegration;]true"
            echo "##vso[task.setvariable variable=PushBuildImages;]false"
            echo "##vso[task.setvariable variable=PushRuntimeImages;]false"
            echo "##vso[task.setvariable variable=EmbedBuildContextInImages;]false"
          displayName: 'Set variables'
        - template: _setReleaseTag.yml
        - template: _buildTemplate.yml

# NodeJS integration tests
- ${{ each nodeVersion in parameters.nodeVersions }}:
  - job:
    displayName: 'Run Node ${{ nodeVersion }} Integration Tests'
    dependsOn:
    - Job_BuildImage_Latest
    - Job_BuildImage_LtsVersions
    - Job_BuildImage_Jamstack
    - Job_BuildImage_GithubActions
    - Job_BuildImage_VsoFocal
    - Job_BuildImage_Full
    - Job_BuildImage_Cli
    - Job_BuildImage_Buildpack
    - Job_RuntimeImages
    pool:
      name: AzurePipelines-EO
      demands:
        - ImageOverride -equals AzurePipelinesUbuntu20.04compliant
    variables:
      skipComponentGovernanceDetection: true
    timeoutInMinutes: 300
    steps:
        - script: |
            echo "##vso[task.setvariable variable=BuildBuildImages;]false"
            echo "##vso[task.setvariable variable=BuildRuntimeImages;]false"
            echo "##vso[task.setvariable variable=TestBuildImages;]false"
            echo "##vso[task.setvariable variable=TestRuntimeImages;]false"
            echo "##vso[task.setvariable variable=TestIntegrationCaseFilter;]category=node-${{ nodeVersion }}"
            echo "##vso[task.setvariable variable=TestIntegration;]true"
            echo "##vso[task.setvariable variable=PushBuildImages;]false"
            echo "##vso[task.setvariable variable=PushRuntimeImages;]false"
            echo "##vso[task.setvariable variable=EmbedBuildContextInImages;]false"
          displayName: 'Set variables'
        - template: _setReleaseTag.yml
        - template: _buildTemplate.yml

# Golang integration tests
- ${{ each golangVersion in parameters.golangVersions }}:
  - job:
    displayName: 'Run Golang ${{ golangVersion }} Integration Tests'
    dependsOn:
    - Job_BuildImage_Latest
    - Job_BuildImage_LtsVersions
    - Job_BuildImage_Jamstack
    - Job_BuildImage_GithubActions
    - Job_BuildImage_VsoFocal
    - Job_BuildImage_Full
    - Job_BuildImage_Cli
    - Job_BuildImage_Buildpack
    - Job_RuntimeImages
    pool:
      name: AzurePipelines-EO
      demands:
        - ImageOverride -equals AzurePipelinesUbuntu20.04compliant
    variables:
      skipComponentGovernanceDetection: true
    timeoutInMinutes: 300
    steps:
        - script: |
            echo "##vso[task.setvariable variable=BuildBuildImages;]false"
            echo "##vso[task.setvariable variable=BuildRuntimeImages;]false"
            echo "##vso[task.setvariable variable=TestBuildImages;]false"
            echo "##vso[task.setvariable variable=TestRuntimeImages;]false"
            echo "##vso[task.setvariable variable=TestIntegrationCaseFilter;]category=golang-${{ golangVersion }}"
            echo "##vso[task.setvariable variable=TestIntegration;]true"
            echo "##vso[task.setvariable variable=PushBuildImages;]false"
            echo "##vso[task.setvariable variable=PushRuntimeImages;]false"
            echo "##vso[task.setvariable variable=EmbedBuildContextInImages;]false"
          displayName: 'Set variables'
        - template: _setReleaseTag.yml
        - template: _buildTemplate.yml

# Php integration tests
- ${{ each phpVersion in parameters.phpVersions }}:
  - job:
    displayName: 'Run Php ${{ phpVersion }} Integration Tests'
    dependsOn:
    - Job_BuildImage_Latest
    - Job_BuildImage_LtsVersions
    - Job_BuildImage_Jamstack
    - Job_BuildImage_GithubActions
    - Job_BuildImage_VsoFocal
    - Job_BuildImage_Full
    - Job_BuildImage_Cli
    - Job_BuildImage_Buildpack
    - Job_RuntimeImages
    pool:
      name: AzurePipelines-EO
      demands:
        - ImageOverride -equals AzurePipelinesUbuntu20.04compliant
    variables:
      skipComponentGovernanceDetection: true
    timeoutInMinutes: 300
    steps:
        - script: |
            echo "##vso[task.setvariable variable=BuildBuildImages;]false"
            echo "##vso[task.setvariable variable=BuildRuntimeImages;]false"
            echo "##vso[task.setvariable variable=TestBuildImages;]false"
            echo "##vso[task.setvariable variable=TestRuntimeImages;]false"
            echo "##vso[task.setvariable variable=TestIntegrationCaseFilter;]category=php-${{ phpVersion }}"
            echo "##vso[task.setvariable variable=TestIntegration;]true"
            echo "##vso[task.setvariable variable=PushBuildImages;]false"
            echo "##vso[task.setvariable variable=PushRuntimeImages;]false"
            echo "##vso[task.setvariable variable=EmbedBuildContextInImages;]false"
          displayName: 'Set variables'
        - template: _setReleaseTag.yml
        - template: _buildTemplate.yml

- job: Job_RubyIntegrationTests
  displayName: Run Ruby Integration Tests
  dependsOn:
    - Job_BuildImage_Latest
    - Job_BuildImage_LtsVersions
    - Job_BuildImage_Jamstack
    - Job_BuildImage_GithubActions
    - Job_BuildImage_VsoFocal
    - Job_BuildImage_Full
    - Job_BuildImage_Cli
    - Job_BuildImage_Buildpack
    - Job_RuntimeImages
  pool:
    name: AzurePipelines-EO
    demands:
      - ImageOverride -equals AzurePipelinesUbuntu20.04compliant
  variables:
    skipComponentGovernanceDetection: true
  timeoutInMinutes: 300
  steps:
  - script: |
      echo "##vso[task.setvariable variable=BuildBuildImages;]false"
      echo "##vso[task.setvariable variable=BuildRuntimeImages;]false"
      echo "##vso[task.setvariable variable=TestBuildImages;]false"
      echo "##vso[task.setvariable variable=TestRuntimeImages;]false"
      echo "##vso[task.setvariable variable=TestIntegrationCaseFilter;]category=ruby"
      echo "##vso[task.setvariable variable=TestIntegration;]true"
      echo "##vso[task.setvariable variable=PushBuildImages;]false"
      echo "##vso[task.setvariable variable=PushRuntimeImages;]false"
      echo "##vso[task.setvariable variable=EmbedBuildContextInImages;]false"
    displayName: 'Set variables'
  - template: _setReleaseTag.yml
  - template: _buildTemplate.yml

- job: Job_DbIntegrationTests
  displayName: Run Database Integration Tests
  dependsOn:
    - Job_BuildImage_Latest
    - Job_BuildImage_LtsVersions
    - Job_BuildImage_Jamstack
    - Job_BuildImage_GithubActions
    - Job_BuildImage_VsoFocal
    - Job_BuildImage_Full
    - Job_BuildImage_Cli
    - Job_BuildImage_Buildpack
    - Job_RuntimeImages
  pool:
    name: AzurePipelines-EO
    demands:
      - ImageOverride -equals AzurePipelinesUbuntu20.04compliant
  variables:
    skipComponentGovernanceDetection: true
  timeoutInMinutes: 300
  steps:
  - script: |
      echo "##vso[task.setvariable variable=BuildBuildImages;]false"
      echo "##vso[task.setvariable variable=BuildRuntimeImages;]false"
      echo "##vso[task.setvariable variable=TestBuildImages;]false"
      echo "##vso[task.setvariable variable=TestRuntimeImages;]false"
      echo "##vso[task.setvariable variable=TestIntegrationCaseFilter;]category=db"
      echo "##vso[task.setvariable variable=TestIntegration;]true"
      echo "##vso[task.setvariable variable=PushBuildImages;]false"
      echo "##vso[task.setvariable variable=PushRuntimeImages;]false"
      echo "##vso[task.setvariable variable=EmbedBuildContextInImages;]false"
    displayName: 'Set variables'
  - template: _setReleaseTag.yml
  - template: _buildTemplate.yml

- job: Job_DevStorageAccountTest
  displayName: Test Dev Storage Account
  pool:
    name: AzurePipelines-EO
    demands:
      - ImageOverride -equals AzurePipelinesUbuntu20.04compliant
  variables:
    skipComponentGovernanceDetection: true
  steps:
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk 3.1.x'
    inputs:
      version: 3.1.x
  - task: ShellScript@2
    displayName: 'Test Dev storage account'
    inputs:
      scriptPath: ./build/testIntegration.sh
      args: StorageAccountTests=Dev