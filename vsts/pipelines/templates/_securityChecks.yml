steps:
- checkout: self
  clean: true

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '$(Build.SourcesDirectory)\src\**\*.csproj'
    arguments: '-o $(Build.BinariesDirectory)'
    zipAfterPublish: false
    modifyOutputPath: false

- task: securedevelopmentteam.vss-secure-development-tools.build-task-credscan.CredScan@2
  displayName: 'Run CredScan'
  inputs:
    debugMode: false
  condition: always()

- task: securedevelopmentteam.vss-secure-development-tools.build-task-binskim.BinSkim@3
  displayName: 'Run BinSkim '
  inputs:
    arguments: 'analyze $(Build.BinariesDirectory)\* --recurse --output $(Build.BinariesDirectory)\binskim.sarif --verbose'
  condition: always()

- task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
  displayName: 'Component Detection - OSS Compliance'
  inputs:
    ignoreDirectories: '$(Build.SourcesDirectory)/tests'

- task: securedevelopmentteam.vss-secure-development-tools.build-task-postanalysis.PostAnalysis@1
  displayName: 'Post Analysis'
  inputs:
    BinSkim: true
    CredScan: true

- task: AntiMalware@3
  displayName: 'Run Antimalware Scan'
  inputs:
    InputType: 'Basic'
    ScanType: 'CustomScan'
    EnableServices: true
    TreatSignatureUpdateFailureAs: 'Warning'
    SupportLogOnError: false
    FileDirPath: '$(Build.StagingDirectory)'
    SignatureFreshness: 'UpToDate'
    TreatStaleSignatureAs: 'Warning'