variables:
- group: Oryx

parameters:
- name: destinationStorageAccountName
  displayName: Destination Storage Account Name
  type: string
  default: oryxsdksprodbackup
- name: dryRun
  displayName: Dry Run?
  type: boolean
  default: false
# If overwrite is false, the only time SDKs will be copied is when the destination
# account does not have the existing container (e.g. dotnet, nodejs, ruby)
- name: overwrite
  displayName: Copy new SDKs to existing containers?
  type: boolean
  default: true

jobs:
    - job: CopySDKsToStorageAccount
      timeoutInMinutes: 300 # sometimes copying a fresh storage account takes longer than the default 60 minute timeout
      pool:
        name: AzurePipelines-EO
        demands:
          - ImageOverride -equals AzurePipelinesUbuntu20.04compliant
      steps:
      - checkout: self
        clean: true

      - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
        displayName: 'Component Detection - OSS Compliance'
        inputs:
          ignoreDirectories: '$(Build.SourcesDirectory)/tests'

      - task: UseDotNet@2
        displayName: 'Use .NET Core sdk 7.x'
        inputs:
          version: 7.0.306

      - task: ShellScript@2
        displayName: 'Copy SDKs from the prod storage account to a destination storage account'
        env:
          DEV_STORAGE_SAS_TOKEN: $(DEV-STORAGE-SAS-TOKEN)
          ORYX_SDK_STORAGE_ACCOUNT_ACCESS_TOKEN: $(ORYX-SDK-STAGING-PRIVATE-SAS-TOKEN)
          SANDBOX_STORAGE_SAS_TOKEN: $(SANDBOX-STORAGE-SAS-TOKEN)
          PROD_STORAGE_SAS_TOKEN: $(PROD-STORAGE-SAS-TOKEN)
          PROD_BACKUP_STORAGE_SAS_TOKEN: $(PROD-BACKUP-STORAGE-SAS-TOKEN)
          PERSONAL_STORAGE_SAS_TOKEN: $(${{ upper(parameters.destinationStorageAccountName) }}-PERSONAL-STORAGE-SAS-TOKEN)
        inputs:
          scriptPath: ./vsts/scripts/copySdksFromProdToStorageAccount.sh
          args:  ${{ parameters.destinationStorageAccountName }} ${{ parameters.dryRun }} ${{ parameters.overwrite }}

trigger: none
pr: none
schedules:
- cron: "0 12 * * 0"
  displayName: Weekly Sunday Copy to Backup Prod
  branches:
    include:
    - main
  always: true # whether to always run the pipeline even if there have been source code changes since the last run