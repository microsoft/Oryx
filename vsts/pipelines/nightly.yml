parameters:
  - name: buildImages
    type: object
    default:
      - 
        key: Latest
        value: latest
      - 
        key: LtsVersions
        value: ltsversions
      - 
        key: Jamstack
        value: jamstack
      - 
        key: GithubActions
        value: githubactions
      - 
        key: VsoFocal
        value: vso-focal
      - 
        key: Full
        value: full
      - 
        key: Cli
        value: cli
      - 
        key: Buildpack
        value: buildpack

resources:
- repo: self
  fetchDepth: 15

variables:
  group: Oryx
  Packaging.EnableSBOMSigning: true

stages:
  - stage: CreateReleaseTag
    jobs:
    - job: CreateReleaseTag
      pool:
        name: AzurePipelines-EO
        demands:
          - ImageOverride -equals AzurePipelinesUbuntu20.04compliant
      variables:
        skipComponentGovernanceDetection: true
      steps:
      - task: ShellScript@2
        inputs:
          scriptPath: ./vsts/scripts/createReleaseTag.sh
        displayName: 'Create release tag'
      - script: |
          set -ex
          sourcesArtifactsDir="$(Build.SourcesDirectory)/artifacts"
          mkdir -p "$sourcesArtifactsDir"
          echo "$(RELEASE_TAG_NAME)" > "$sourcesArtifactsDir/releaseTag.txt"
        displayName: 'Write release tag name to an artifact file'
      - task: PublishPipelineArtifact@1
        displayName: 'Publish artifact file having the release tag name'
        inputs:
          targetPath: $(Build.SourcesDirectory)/artifacts/releaseTag.txt
          artifactName: releaseTag

  - stage: Build
    displayName: Build Stage
    jobs:
    - job: Job_Security
      displayName: Security
      condition: succeeded()
      pool:
        name: Azure Pipelines
        vmImage: windows-2022
      steps:
      - template: templates/_securityChecks.yml
      
      # Job loop for BuildImages
    - ${{ each buildImage in parameters.buildImages }}:
        - job: Job_BuildImage_${{ buildImage.key }}
          displayName: 'Build & Test ${{ buildImage.key }} Build image'
          pool:
            name: AzurePipelines-EO
            demands:
              - ImageOverride -equals AzurePipelinesUbuntu20.04compliant
          timeoutInMinutes: 480
          steps:
          - script: |
              echo "##vso[task.setvariable variable=BuildBuildImages;]true"
              echo "##vso[task.setvariable variable=TestBuildImages;]true"
              echo "##vso[task.setvariable variable=BuildRuntimeImages;]false"
              echo "##vso[task.setvariable variable=TestRuntimeImages;]false"
              echo "##vso[task.setvariable variable=PushBuildImages;]true"
              echo "##vso[task.setvariable variable=PushRuntimeImages;]false"
              echo "##vso[task.setvariable variable=EmbedBuildContextInImages;]true"
              echo "##vso[task.setvariable variable=RELEASE_TAG_NAME;]$(Build.BuildNumber)"
            displayName: 'Set variables'
          - template: templates/_buildTemplate.yml
            parameters:
                imageType: ${{ buildImage.value }}

    - job: Job_RuntimeImages
      displayName: Build and Test Runtime Images
      condition: succeeded()
      pool:
        name: AzurePipelines-EO
        demands:
          - ImageOverride -equals AzurePipelinesUbuntu20.04compliant
      # Building runtime images can take a long time due to our PHP images
      timeoutInMinutes: 480
      steps:
      - script: |
          echo "##vso[task.setvariable variable=BuildBuildImages;]false"
          echo "##vso[task.setvariable variable=TestBuildImages;]false"
          echo "##vso[task.setvariable variable=BuildRuntimeImages;]true"
          echo "##vso[task.setvariable variable=TestRuntimeImages;]true"
          echo "##vso[task.setvariable variable=PushRuntimeImages;]true"
          echo "##vso[task.setvariable variable=PushBuildImages;]false"
          echo "##vso[task.setvariable variable=EmbedBuildContextInImages;]true"
          echo "##vso[task.setvariable variable=RELEASE_TAG_NAME;]$(Build.BuildNumber)"
        displayName: 'Set variables'
      - template: templates/_buildTemplate.yml

    - template: templates/_integrationJobTemplate.yml

trigger: none